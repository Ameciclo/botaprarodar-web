name: Testing and Deploying - DEV

on:
  push:
    branches:
      - main
jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: main
      - name: Get main
        run: git fetch origin main
      - name: Install dependencies
        run: npm install
      - name: Install Jest globally
        run: sudo npm install -g jest
      - name: Run Tests
        env:
          REACT_APP_API_KEY: ${{secrets.REACT_APP_API_KEY}}
          REACT_APP_AUTH_DOMAIN: ${{secrets.REACT_APP_APP_ID}}
          REACT_APP_DATABASE_URL: ${{secrets.REACT_APP_AUTH_DOMAIN}}
          REACT_APP_PROJECT_ID: ${{secrets.REACT_APP_DATABASE_URL}}
          REACT_APP_MESSAGING_SENDER_ID: ${{secrets.REACT_APP_MESSAGING_SENDER_ID}}
          REACT_APP_APP_ID: ${{secrets.REACT_APP_PROJECT_ID}}
          REACT_APP_STORAGE_BUCKET: ${{secrets.REACT_APP_STORAGE_BUCKET}}
        run: npm run test --silent --watchAll=false
  Deploy:
    needs: Testing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ${{ matrix.node-version }}
    env:
      REACT_APP_API_KEY: ${{ secrets.DEV_REACT_APP_API_KEY }}
      REACT_APP_AUTH_DOMAIN: ${{secrets.DEV_REACT_APP_AUTH_DOMAIN}}
      REACT_APP_DATABASE_URL: ${{secrets.DEV_REACT_APP_DATABASE_URL}}
      REACT_APP_PROJECT_ID: ${{secrets.DEV_REACT_APP_PROJECT_ID}}
      REACT_APP_STORAGE_BUCKET: ${{secrets.DEV_REACT_APP_STORAGE_BUCKET}}
      REACT_APP_MESSAGING_SENDER_ID: ${{secrets.DEV_REACT_APP_MESSAGING_SENDER_ID}}
      REACT_APP_APP_ID: ${{secrets.DEV_REACT_APP_APP_ID}}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm cache clean --force
      - run: npm cache verify
      - run: npm install
      - run: npm run build --if-present

      - name: Deploy to netlify
        uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.DEV_NETLIFY_SITE_ID }}
        with:
          args: deploy --dir=build --prod
          secrets: '["NETLIFY_AUTH_TOKEN", "DEV_NETLIFY_SITE_ID"]'
